services:
  opensearch:
    image: opensearchproject/opensearch:2.4.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
    ports:
      - "9200:9200"
    networks:
      - opensearch-net

  search-service:
    build: ./search-service
    container_name: search-service
    environment:
      - OPENSEARCH_ENDPOINT=$OPENSEARCH_ENDPOINT
      - DYNAMODB_ENDPOINT=http://localstack:4566
      - PORT=8080
      - ENV=$ENV
      - COURSE_INDEX=$COURSE_INDEX
      - COURSE_TABLE=$COURSE_TABLE
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - "8080:8080"
    depends_on:
      - opensearch
      - localstack
      - prometheus
      - grafana
    networks:
      - opensearch-net

  react-app:
    build:
      context: ./frontend/search-app
      dockerfile: Dockerfile
    container_name: react-app
    ports:
      - "3001:3000"
    depends_on:
      - search-service
    networks:
      - opensearch-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - opensearch-net

  grafana:
    image: awesome-grafana:latest
    build:
      context: grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH="/var/lib/grafana/dashboards/exported_dashboard.json"  
    depends_on:
      - prometheus
    networks:
      - opensearch-net

  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - ./volume:/var/lib/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - opensearch-net

  tests:
    build:
      context: ./integration-tests
    depends_on:
      - search-service
    environment:
      - SEARCH_SERVICE_DOMAIN=http://search-service:8080
    entrypoint: ["./tests/run-tests.sh"]

networks:
  opensearch-net:
    driver: bridge

volumes:
  grafana-storage: